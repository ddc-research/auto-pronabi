---
title: "Reporte de actividades semanales"
subtitle: "Equipo de transferencias a PRONABI"
execute: 
  echo: false
  warning: false
format:
  docx:
    reference-doc: reference.docx
    number-sections: true
---

```{r}
library(tidyverse)
library(appsheet)
library(flextable)

tbl_individual <- function(.data) {
	.data |> 
		flextable() |> 
		theme_box() |> 
		merge_v(j = 1) |> 
		set_table_properties(layout = "autofit") |> 
		fontsize(size = 9) |> 
		font(fontname = "Arial")
}

min_date <- now("America/Lima") - days(7)
```

# Producción semanal 

Este reporte muestra el avance en la producción en las transferencias de vehículos a PRONABI desde el `r format(min_date, "%d/%m/%Y")` al `r format(today(), "%d/%m/%Y")`.

```{r}
documentos <-
	appsheet("documents") |>
	mutate(last_modification = mdy_hms(last_modification))

users <- appsheet("users") |> 
	select(encargado = `Row ID`, name, last_name)

vehiculos <- appsheet("vehicles")

inmuebles <- appsheet("properties")

inmuebles_docs <- appsheet("properties_documents") |> 
	mutate(last_modification = mdy_hms(last_modification))
```

## Documentos subidos al SISETRA - Vehículos

```{r}
documentos |> 
	filter(encargado != "", last_modification > min_date) |>
	left_join(users) |> 
	mutate(Encargado = paste(name, last_name)) |> 
	mutate(Fecha = format(last_modification, "%d/%m/%Y")) |> 
	select(Encargado, `Descripción` = description, Fecha, `Tipo de documento` = document_type) |>
	mutate(
		Descripción = `Descripción` |> 
			str_squish() |> 
			str_remove("\\.$")
	) |> 
	count(across(.cols = everything()), name = "recuento") |> 
	mutate(
		Descripción = glue::glue("{Descripción} ({recuento} vehículo{if_else(recuento > 1, 's', '')}).") 
	) |> 
	select(-recuento) |> 
	arrange(Encargado, Fecha) |> 
	tbl_individual()
```

## Documentos subidos al SISETRA - Inmuebles

```{r}
inmuebles_docs |> 
	filter(last_modification > min_date) |> 
	left_join(users, by = join_by(assignee == encargado)) |> 
	mutate(Encargado = paste(name, last_name)) |> 
	mutate(Fecha = format(last_modification, "%d/%m/%Y")) |> 
	select(Encargado, `Descripción` = description, Fecha, `Tipo de documento` = document_type) |>
	mutate(
		Descripción = `Descripción` |> 
			str_squish() |> 
			str_remove("\\.$")
	) |> 
	count(across(.cols = everything()), name = "recuento") |> 
	mutate(
		Descripción = glue::glue("{Descripción} ({recuento} vehículo{if_else(recuento > 1, 's', '')}).") 
	) |> 
	select(-recuento) |> 
	arrange(Encargado, Fecha) |> 
	tbl_individual()
```


# Producción acumulada

## Vehiculos según estado de cierre

Si tiene acta de cierre: Cerrado.
Si tiene acta de devolución, remate, adjudicación, etc: Listo para cierre
Si tiene algún otro documento: En proceso
Si no tiene ningún documento: Pendiente

```{r}
tipo_de_documentos <- documentos |> 
	select(id_documento = `Row ID`, tipo_de_documento = document_type)

casos_pendientes_cierre <- c("Acta de devolución", 
							 "Acta de transferencia", 
							 "Acta de remate",
							 "Acta de subasta")

casos_en_proceso <- c("Otros", 
					  "Informe técnico vehicular",
					  "Acta de incautación",
					  "Documento de asignación")

estado_vehiculos <- vehiculos |> 
	select(id_vehiculo = `Row ID`, id_documento = `Related documents`) |> 
	separate_longer_delim(cols = id_documento, delim = ",") |> 
	mutate(id_documento = str_squish(id_documento)) |> 
	left_join(tipo_de_documentos) |> 
	summarise(
		.by = id_vehiculo,
		estado = case_when(
			any(tipo_de_documento == "Acta de cierre en DGCO") ~ "Cerrado",
			any(tipo_de_documento %in% casos_pendientes_cierre) ~ "Pendiente de cierre",
			any(tipo_de_documento %in% casos_en_proceso) ~ "En proceso",
			.default = "Pendiente de inicio"
		)
	)
```


```{r}
#| fig-width: 7
#| fig-height: 4
estado_vehiculos |> 
	mutate(estado = factor(estado, levels = c("Pendiente de inicio", "En proceso", "Pendiente de cierre", "Cerrado"))) |> 
	count(estado, .drop = FALSE) |> 
	mutate(
		porcentaje = (n/sum(n)*100) |> round(2),
		label = glue::glue(" {n} ({porcentaje}%) ")
	) |> 
	ggplot(aes(x = n, y = estado)) +
	geom_col(fill = "#CCCCCC", color = "#383838") +
	geom_text(aes(label = label), hjust = "inward", fontface = "bold") +
	theme(
		panel.background = element_rect(fill = "#f0f0e0"),
		axis.text = element_text(face = "bold"),
		axis.title = element_text(size = 12),
		axis.title.x = element_text(margin = margin(t = 20)),
		axis.title.y = element_text(margin = margin(r = 20))
	) +
	labs(
		x = "N° de vehiculos",
		y = "Estado de atención"
	)
```

## Inmuebles según estado de cierre

Si tiene acta de cierre: Cerrado.
Si tiene acta de transferencia: Transferido
Si tiene solicitud de transferencia a PRONABI: Por transferir
Si tiene informe de situación física legal: Con saneamiento físico legal
Si tiene plano: Con ubicación física
Si no tiene ningún documento: Pendiente

```{r}
estado_inmuebles <- inmuebles |> 
	select(id_inmueble = `Row ID`, id_documento = `Related properties_documents`) |> 
	separate_longer_delim(cols = id_documento, delim = ",") |> 
	mutate(id_documento = str_squish(id_documento)) |> 
	left_join(inmuebles_docs, by = join_by(id_documento == `Row ID`)) |> 
	summarise(
		.by = id_inmueble,
		estado = case_when(
			any(document_type == "Acta de cierre en DGCO") ~ "Cerrado",
			any(document_type == "Acta de transferencia") ~ "Transferido",
			any(document_type == "Solicitud de transferencia a PRONABI") ~ "Por transferir",
			any(document_type == "Informe de situación física legal") ~ "Con saneamiento físico legal",
			any(document_type == "Plano") ~ "Con ubicación física",
			.default = "Pendiente de inicio"
		)
	)
```


```{r}
estado_inmuebles |> 
	mutate(
		estado = estado |> 
			factor(levels = c("Pendiente de inicio", "Con ubicación física", "Con saneamiento físico legal",
							  "Por transferir", "Transferido", "Cerrado"))
	) |> 
	count(estado, .drop = FALSE) |> 
	mutate(
		porcentaje = (n/sum(n)*100) |> round(2),
		label = glue::glue(" {n} ({porcentaje}%) ")
	) |> 
	ggplot(aes(x = n, y = estado)) +
	geom_col(fill = "#CCCCCC", color = "#383838") +
	geom_text(aes(label = label), hjust = "inward", fontface = "bold") +
	theme(
		panel.background = element_rect(fill = "#f0f0e0"),
		axis.text = element_text(face = "bold"),
		axis.title = element_text(size = 12),
		axis.title.x = element_text(margin = margin(t = 20)),
		axis.title.y = element_text(margin = margin(r = 20))
	) +
	labs(
		x = "N° de inmuebles",
		y = "Estado de atención"
	)
```

